<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Transaction 설정 -->
	<!-- 1. TransactionManager 설정 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 2. Transaction Advice 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="updateUser" propagation="REQUIRED" />
			<tx:method name="update" propagation="NEVER" />
		</tx:attributes>
	</tx:advice>
	<!-- 3. 설정한 Tx Advice를 적용할 Point Cut 설정 -->
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(public * myspring.user..*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	
	

	<!-- Annotation @Aspect에 대한 AOP 설정 -->
	<aop:aspectj-autoproxy />
	<!-- XML 기반의 AOP 설정 -->
	<!-- Advice 클래스를 bean으로 등록 -->
	<bean id="ptAdvice" class="myspring.aop.xml.PerformanceTraceAdvice" />
	<aop:config>
		<aop:aspect ref="ptAdvice">
			<aop:around method="trace" pointcut="execution(public * myspring.user.dao..*(..))" />
		</aop:aspect>
	</aop:config>

	<!-- Mybatis-Spring 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/SqlMapConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:config/User.xml</value>
				<value>classpath:config/Student.xml</value>
			</list>
		</property>
	</bean>

	<!-- DataSource 설정 -->
	<bean id="dataSource"
	      class="org.apache.commons.dbcp2.BasicDataSource"
		  destroy-method="close"
		  p:driverClassName="oracle.jdbc.OracleDriver"
		  p:url="jdbc:oracle:thin:@192.168.0.165:1521:xe"
		  p:username="scott"
		  p:password="tiger" />

	<!-- @Component @Autowired 선언한 패키지를 알려주는 설정 -->
	<!-- bean은 기본 네임 스페이스이고 프리 픽스 context가 있기 때문에 context는 명시해줘야 한다. -->
	<context:component-scan base-package="myspring" />

	<!-- SrgingPrinter 와 ConsolePrinter를 bea 등록 -->
	<bean id="sPrinter" class="myspring.di.xml.StringPrinter" />
	<bean id="cPrinter" class="myspring.di.xml.ConsolePrinter" />

	<!-- <bean id="hello" class="myspring.di.xml.Hello" scope="prototype"> -->
	<bean id="hello" class="myspring.di.xml.Hello">
		<property name="name" value="황인용" />
		<property name="printer" ref="sPrinter" />
	</bean>

	<bean id="hello2" class="myspring.di.xml.Hello">
		<property name="name" value="황인용2" />
		<property name="printer" ref="cPrinter" />
	</bean>
</beans>
